{"version":3,"sources":["components/dialogs/dialogs-item/dialog/dialog.jsx","components/dialogs/dialogs-item/dialogs-item.jsx","components/dialogs/messages/message/message.jsx","components/dialogs/messages/messages.jsx","components/form/message-form/message-form.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","components/untils/validators/validators.js","hoc/withAuthRedirect.js","components/dialogs/dialogs.module.css","components/dialogs/dialogs-item/dialogs-item.module.css","components/dialogs/dialogs-item/dialog/dialog.module.css","components/dialogs/messages/messages.module.css","components/dialogs/messages/message/message.module.css"],"names":["Dialog","id","name","className","style","dialog","to","DialogsItem","dialogsElements","dialogs","map","key","Message","message","this","props","React","Component","Messages","messages","msg","messagesItem","maxLength1000","maxLengthCreator","minLength1","minLengthCreator","input","Element","MessageReduxForm","reduxForm","form","handleSubmit","onSubmit","Field","validate","required","placeholder","component","autoComplete","Dialogs","addMessage","dialogsData","messagesData","formData","compose","connect","state","dialogsPage","newMessageText","withAuthRedirect","FormControl","meta","hasError","touched","error","children","Input","restProps","label","InputProps","startAdornment","position","createField","validators","type","value","maxLength","length","minLength","mapStateToPropsForRedirect","isAuth","auth","RedirectComponent","module","exports"],"mappings":"0NAYeA,EARF,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAClB,OACE,yBAAKC,UAAWC,IAAMC,QACpB,kBAAC,IAAD,CAASC,GAAE,mBAAcL,IAAOC,KCMvBK,G,OARG,SAAC,GAAiB,IAC9BC,EAD6B,EAAdC,QACWC,KAAI,SAACL,GACjC,OAAO,kBAAC,EAAD,CAAQH,KAAMG,EAAOH,KAAMD,GAAII,EAAOJ,GAAIU,IAAKN,EAAOJ,QAG/D,OAAO,yBAAKE,UAAWC,IAAMK,SAAUD,K,4ECE1BI,E,iLANP,OACI,yBAAKT,UAAWC,IAAMS,SAAUC,KAAKC,MAAMF,a,GAHjCG,IAAMC,WCmBbC,E,uLAhBP,OACIJ,KAAKC,MAAMI,SAAST,KAAI,SAAAU,GACpB,OAAO,kBAAC,EAAD,CAASP,QAASO,EAAIP,QAASF,IAAKS,EAAInB,U,+BAMvD,OACI,yBAAKE,UAAWC,IAAMe,UACjBL,KAAKO,oB,GAbCL,IAAMC,W,6CCMvBK,EAAgBC,YAAiB,KACjCC,EAAaC,YAAiB,GAC9BC,EAAQC,YAAQ,SAuBPC,EAHUC,YAAU,CACjCC,KAAM,WADiBD,EAnBL,SAACd,GAAW,IACxBgB,EAAiBhB,EAAjBgB,aACN,OACE,0BAAMC,SAAUD,EAAc5B,UAAU,gBACtC,yBAAKA,UAAU,uBACb,kBAAC8B,EAAA,EAAD,CACEC,SAAU,CAACC,IAAUb,EAAeE,GACpCY,YAAY,qBACZlC,KAAK,UACLmC,UAAWX,EACXvB,UAAU,qBACVmC,aAAa,QAEf,4BAAQnC,UAAU,uBAAlB,oBCHOoC,EAjBC,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAM1C,OACE,yBAAKvC,UAAWC,IAAMK,SACpB,kBAAC,EAAD,CAAaA,QAASgC,IAEtB,kBAAC,EAAD,CAAUtB,SAAUuB,IAEpB,kBAAC,EAAD,CAAkBV,SAVP,SAACW,GACdH,EAAWG,Q,yBCSAC,sBACbC,aAZoB,SAACC,GACrB,MAAO,CACLC,YAAaD,EAAMC,YACnBN,YAAaK,EAAMC,YAAYN,YAC/BC,aAAcI,EAAMC,YAAYL,aAChCM,eAAgBF,EAAMC,YAAYC,kBAOX,CAACR,iBAC1BS,IAFaL,CAGbL,I,+KCfWW,EAAc,SAAC,GAA8B,EAA5BxB,MAA6B,IAAtByB,EAAqB,EAArBA,KAASpC,EAAY,gCAClDqC,EAAWD,EAAKE,SAAWF,EAAKG,MACtC,OACE,yBAAKnD,UAAS,uBAAkBiD,EAAW,QAAU,KAClDrC,EAAMwC,SACNH,GAAY,8BAAOD,EAAKG,SAKlBE,EAAQ,SAACzC,GAAW,IACvBW,EAAwBX,EAAxBW,MAAU+B,EADY,YACE1C,EADF,WAE9B,OACE,kBAACmC,EAAgBnC,EACf,kBAAC,IAAD,eACEZ,UAAU,QACVF,GAAG,4BACHyD,MAAO3C,EAAM2C,OACThC,EACA+B,EALN,CAMEE,WAAY,CACVC,eACE,kBAAC,IAAD,CAAgBC,SAAS,SACvB,kBAAC,IAAD,aASDlC,EAAU,SAACA,GACtB,OAAO,YAAyF,IAAtFD,EAAqF,EAArFA,MAAqF,IAA9EyB,KAAOE,EAAuE,EAAvEA,QAASC,EAA8D,EAA9DA,MAAQlB,EAAsD,EAAtDA,YAAcE,EAAwC,EAAxCA,aAAcnC,EAA0B,EAA1BA,UAAcY,EAAY,yEACvFqC,EAAWC,GAAWC,EAC5B,OACE,yBAAKnD,UAAS,uBAAkBiD,EAAW,QAAU,KACnD,kBAAC,EAAD,iBACM1B,EACAX,EAFN,CAGEqB,YAAaA,EACbjC,UAAWA,EACXmC,aAAcA,KAEfc,GAAY,kCAAQE,EAAR,QAMRQ,EAAc,SACzBC,EACA5D,EACAiC,EACA4B,EACA9D,EACAwD,GAEA,OACE,6BACE,kBAAC,IAAD,CACExB,SAAU6B,EACV5D,UAAWA,EACXmC,aAAa,MACbF,YAAaA,EACb4B,KAAMA,EACN9D,KAAMA,EACNwD,MAAOA,EACPrB,UAAWmB,O,uDC1EnB,sGAAO,IAAMrB,EAAW,SAAC8B,GACvB,IAAIA,EACJ,MAAO,qBAGI1C,EAAmB,SAAC2C,GAC/B,OAAO,SAACD,GACN,GAAIA,GAASA,EAAME,OAASD,EAAW,MAAM,cAAN,OAAqBA,EAArB,cAK9BzC,EAAmB,SAAC2C,GAC7B,OAAO,SAAAH,GACH,GAAGA,GAASA,EAAME,OAASC,EAAW,MAAM,cAAN,OAAqBA,EAArB,e,+ICV1CC,EAA6B,SAACvB,GAChC,MAAO,CACLwB,OAAQxB,EAAMyB,KAAKD,SAIVrB,EAAmB,SAAChC,GAAe,IACxCuD,EADuC,iLAGzC,OAAI1D,KAAKC,MAAMuD,OACR,kBAACrD,EAAcH,KAAKC,OADG,kBAAC,IAAD,CAAUT,GAAG,eAHF,GACbU,IAAMC,WAWtC,OAJqC4B,YAAQwB,EAARxB,CACnC2B,K,oBClBJC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,QAAU,gC,oBCA5BD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,oBCA3DD,EAAOC,QAAU,CAAC,SAAW,6B,oBCA7BD,EAAOC,QAAU,CAAC,QAAU,2B","file":"static/js/6.79dda2a1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from \"./dialog.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet Dialog = ({ id, name }) => {\r\n  return (\r\n    <div className={style.dialog}>\r\n      <NavLink to={`/dialogs/${id}`}>{name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React from \"react\";\r\nimport style from \"./dialogs-item.module.css\";\r\nimport Dialog from \"./dialog/dialog\";\r\nimport { render } from \"@testing-library/react\";\r\n\r\nlet DialogsItem = ({ dialogs }) => {\r\n  let dialogsElements = dialogs.map((dialog) => {\r\n    return <Dialog name={dialog.name} id={dialog.id} key={dialog.id} />;\r\n  });\r\n\r\n  return <div className={style.dialogs}>{dialogsElements}</div>;\r\n};\r\n\r\nexport default DialogsItem;\r\n","import React from 'react'\r\nimport style from './message.module.css'\r\n\r\n\r\nclass Message extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={style.message}>{this.props.message}</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React from 'react'\r\nimport style from './messages.module.css'\r\nimport Message from './message/message'\r\n\r\nclass Messages extends React.Component {\r\n\r\n    messagesItem() {\r\n        return (\r\n            this.props.messages.map(msg => {\r\n                return <Message message={msg.message} key={msg.id} />\r\n            })\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.messages}>\r\n                {this.messagesItem()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Messages","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport \"./message-form.sass\";\r\nimport { Element } from \"../../common/FormsControls/FormsControls\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n  minLengthCreator,\r\n} from \"../../untils/validators/validators\";\r\n\r\nconst maxLength1000 = maxLengthCreator(1000);\r\nconst minLength1 = minLengthCreator(1);\r\nconst input = Element(\"input\")\r\nconst MessageForm = (props) => {\r\n  let { handleSubmit } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"message-form\">\r\n      <div className=\"message-form_layout\">\r\n        <Field\r\n          validate={[required, maxLength1000, minLength1]}\r\n          placeholder=\"Input your message\"\r\n          name=\"message\"\r\n          component={input}\r\n          className=\"message-form_input\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <button className=\"message-form_button\">Add Message</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst MessageReduxForm = reduxForm({\r\n  form: \"message\",\r\n})(MessageForm);\r\nexport default MessageReduxForm;\r\n","import React from \"react\";\r\nimport style from \"./dialogs.module.css\";\r\nimport DialogsItem from \"./dialogs-item/dialogs-item\";\r\nimport Messages from \"./messages/messages\";\r\nimport MessageReduxForm from \"../form/message-form/message-form\";\r\n\r\nconst Dialogs = ({ addMessage, dialogsData, messagesData }) => {\r\n  \r\n  let onSubmit = (formData) => {\r\n    addMessage(formData);\r\n  };\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <DialogsItem dialogs={dialogsData} />\r\n\r\n      <Messages messages={messagesData} />\r\n\r\n      <MessageReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { addMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n    dialogsData: state.dialogsPage.dialogsData,\r\n    messagesData: state.dialogsPage.messagesData,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {addMessage,}),\r\n  withAuthRedirect,\r\n)(Dialogs)\r\n","import React from \"react\";\r\nimport \"./FormsControls.sass\";\r\nimport { TextField, InputAdornment } from \"@material-ui/core\";\r\nimport { AccountCircle, VpnKeyIcon } from \"@material-ui/icons\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const FormControl = ({ input, meta, ...props }) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Input = (props) => {\r\n  const { input, ...restProps } = props;\r\n  return (\r\n    <FormControl {...props}>\r\n      <TextField\r\n        className=\"field\"\r\n        id=\"input-with-icon-textfield\"\r\n        label={props.label}\r\n        {...input}\r\n        {...restProps}\r\n        InputProps={{\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\">\r\n              <AccountCircle />\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n      />\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport const Element = (Element) => {\r\n  return ({ input, meta: {touched, error}, placeholder,  autoComplete, className, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n      <div className={`form-control ${hasError ? \"error\" : \"\"}`}>\r\n        <Element\r\n          {...input}\r\n          {...props}\r\n          placeholder={placeholder}\r\n          className={className}\r\n          autoComplete={autoComplete}\r\n        />\r\n        {hasError && <span> {error} </span>}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport const createField = (\r\n  validators,\r\n  className,\r\n  placeholder,\r\n  type,\r\n  name,\r\n  label\r\n) => {\r\n  return (\r\n    <div>\r\n      <Field\r\n        validate={validators}\r\n        className={className}\r\n        autoComplete=\"off\"\r\n        placeholder={placeholder}\r\n        type={type}\r\n        name={name}\r\n        label={label}\r\n        component={Input}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n  return (value) => {\r\n    if (value && value.length > maxLength) return `Max Length ${maxLength} symbols`;\r\n    return undefined;\r\n  };\r\n};\r\n\r\nexport const minLengthCreator = (minLength) => {\r\n    return value => {\r\n        if(value && value.length < minLength) return `Min Length ${minLength} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if(!this.props.isAuth) return <Redirect to=\"/login\" />\r\n      return <Component {...this.props} />;\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\r\n    RedirectComponent\r\n  );\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs_dialogs__3KrFF\",\"dialogsSend\":\"dialogs_dialogsSend__1-Anr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogs-item_dialogs__2rcnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"dialog_dialog__Ux0q-\",\"active\":\"dialog_active__3QEoU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messages_messages__2hRXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"message_message__1R9rs\"};"],"sourceRoot":""}